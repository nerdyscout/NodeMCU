kiplot:
  version: 1

preflight:
  update_xml: true
  run_erc: true
  run_drc: true
  check_zone_fills: true
  filters:
    - filter_msg: 'Pin connected to other pins, but not driven by any pin'
      error_number: 3
      regexp:  '(Power input) of component'
    - filter_msg: 'Conflict problem between pins. Severity: error'
      error_number: 5
      regexp:  'Conflict problem between pins'
    - filter_msg: 'Courtyards overlap'
      error_number: 45
      regexp:  'Courtyards overlap'
    - filter_msg: 'Footprint has no courtyard defined'
      error_number: 46
      regexp:  'Footprint LOGO'
  ignore_unconnected: false

outputs:
  - name: "gerber files"
    type: "gerber"
    dir: 'gerbers'
    options:
      # generic layer options
      exclude_edge_layer: false
      exclude_pads_from_silkscreen: false
      use_aux_axis_as_origin: true
      plot_sheet_reference: false
      plot_footprint_refs: true
      plot_footprint_values: false
      force_plot_invisible_refs_vals: false
      tent_vias: true
      # gerber options
      line_width: 0.15
      subtract_mask_from_silk: true
      use_protel_extensions: false
      gerber_precision: 4.5
      create_gerber_job_file: false
      use_gerber_x2_attributes: true
      use_gerber_net_attributes: false
    layers:
      - 'all'

  - name: "Gerber drills"
    comment: "Gerber drill files"
    type: "gerb_drill"
    dir: "gerbers"
    options:
      use_aux_axis_as_origin: true
      output: '%f-%i.%x'

  - name: "Excellon drills"
    comment: "Excellon drill files"
    type: "excellon"
    dir: "gerbers"
    options:
      use_aux_axis_as_origin: true
      metric_units: true
      pth_and_npth_single_file: false
      minimal_header: true
      mirror_y_axis: false
      output: '%f-%i.%x'
      
  - name: "position"
    comment: "position of the components for the pick & place machine"
    type: "position"
    dir: "gerbers"
    options:
      format: "CSV"
      units: "millimeters"
      separate_files_for_front_and_back: false
      only_smd: false

  # PcbDraw - Beautiful 2D PCB render:
  # Uses configurable colors.
  # Can also render the components if the 2D models are available
  - name: 'plot images of pcb TOP'
    comment: 'Exports the PCB as a 2D model (SVG, PNG or JPG).'
    type: 'pcbdraw'
    dir: 'docs/img'
    options:
      # [boolean=false] render the bottom side of the board (default is top side)
      bottom: false
      # [number=300] [10,1200] dots per inch (resolution) of the generated image
      dpi: 300
      # [string='svg'] [svg,png,jpg] output format. Only used if no `output` is specified
      format: 'svg'
      # [list(string)] list of components to highlight
      # highlight:
      # [list(string)] list of libraries
      libs: ['/opt/pcbdraw/pcbdraw/lib']
      # [boolean=false] mirror the board
      mirror: false
      # [boolean=false] do not make holes transparent
      no_drillholes: false
      # [string='%f-%i.%x'] name for the generated file . Affected by global options
      output: '%f-Board_%i.%x'
      # [boolean=false] show placeholder for missing components
      placeholder: false
      # [dict|None] replacements for PCB references using components (lib:component)
      remap:
      # [string|list(string)] [none,all] list of components to draw, can be also a string for none or all.
      # The default is none
      show_components: none
      # [string|dict] PCB style (colors). An internal name, the name of a JSON file or the style options
      style: '/opt/pcbdraw/pcbdraw/styles/jlcpcb-green-enig.json'
      # [boolean=false] render V-CUTS on the Cmts.User layer
      vcuts: false
      # [string='visible'] [visible,all,none] using visible only the warnings about components in the visible side are generated
      warnings: 'visible'

  - name: 'plot images of pcb BOTTOM'
    comment: 'Exports the PCB as a 2D model (SVG, PNG or JPG).'
    type: 'pcbdraw'
    dir: 'docs/img'
    options:
      # [boolean=false] render the bottom side of the board (default is top side)
      bottom: true
      # [number=300] [10,1200] dots per inch (resolution) of the generated image
      dpi: 300
      # [string='svg'] [svg,png,jpg] output format. Only used if no `output` is specified
      format: 'svg'
      # [list(string)] list of components to highlight
      # highlight:
      # [list(string)] list of libraries
      libs: ['/opt/pcbdraw/pcbdraw/lib']
      # [boolean=false] mirror the board
      mirror: false
      # [boolean=false] do not make holes transparent
      no_drillholes: false
      # [string='%f-%i.%x'] name for the generated file . Affected by global options
      output: '%f-Board_%i.%x'
      # [boolean=false] show placeholder for missing components
      placeholder: false
      # [dict|None] replacements for PCB references using components (lib:component)
      remap:
      # [string|list(string)] [none,all] list of components to draw, can be also a string for none or all.
      # The default is none
      show_components: none
      # [string|dict] PCB style (colors). An internal name, the name of a JSON file or the style options
      style: '/opt/pcbdraw/pcbdraw/styles/jlcpcb-green-enig.json'
      # [boolean=false] render V-CUTS on the Cmts.User layer
      vcuts: false
      # [string='visible'] [visible,all,none] using visible only the warnings about components in the visible side are generated
      warnings: 'visible'

  - name: 'print schema'
    comment: "Print schematic (PDF)"
    type: pdf_sch_print
    dir: docs
    options:
      output: '%p-Schematic.%x'

  - name: 'print schema'
    comment: "Print schematic (SVG)"
    type: svg_sch_print
    dir: docs
    options:
      output: '%p-Schematic.%x'
            
  - name: 'print board'
    comment: "Print board (PDF) front"
    type: pdf_pcb_print
    layers:
      - 'user'
      - layer: F.CrtYd
      - layer: F.Fab
    dir: docs
    options:
      output: '%p-Board_top.%x'

  - name: 'print board'
    comment: "Print board (PDF) bottom"
    type: pdf_pcb_print
    layers:
      - layer: Edge.Cuts
      - layer: B.CrtYd
      - layer: B.Fab
    dir: docs
    options:
      output: '%p-Board_bottom.%x'

  # KiBoM (KiCad Bill of Materials):
  # For more information: https://github.com/INTI-CMNB/KiBoM
  # This output is what you get from the 'Tools/Generate Bill of Materials' menu in eeschema.
  - name: 'kibom'
    comment: 'kibom csv'
    type: 'kibom'
    dir: 'gerbers'
    options:
      conf:
        fit_field: Variant
        hide_pcb_info: true
        exclude_any:
          - column: Part
            regex: TestPoint
          - column: Part
            regex: LOGO
          - column: Part
            regex: Jumper
          - column: Value
            regex: NodeMCU
      # [string='HTML'] [HTML,CSV,XML,XLSX] format for the BoM
      format: 'CSV'
      # [number=1] Number of boards to build (components multiplier)
      number: 1
      # [string='%f-%i.%x'] filename for the output (%i=bom). Affected by global options
      output: '%f_BOM_IR.%x'
      # [string=','] CSV Separator
      separator: ';'
      # Board variant(s), used to determine which components are output to the BoM
      variant: IR
  
  # KiBoM (KiCad Bill of Materials):
  # For more information: https://github.com/INTI-CMNB/KiBoM
  # This output is what you get from the 'Tools/Generate Bill of Materials' menu in eeschema.
  - name: 'kibom'
    comment: 'kibom csv'
    type: 'kibom'
    dir: 'gerbers'
    options:
      conf:
        fit_field: Variant
        hide_pcb_info: true
        exclude_any:
          - column: Part
            regex: TestPoint
          - column: Part
            regex: LOGO
          - column: Part
            regex: Jumper
          - column: Value
            regex: NodeMCU
      # [string='HTML'] [HTML,CSV,XML,XLSX] format for the BoM
      format: 'CSV'
      # [number=1] Number of boards to build (components multiplier)
      number: 1
      # [string='%f-%i.%x'] filename for the output (%i=bom). Affected by global options
      output: '%f_BOM_PIS.%x'
      # [string=','] CSV Separator
      separator: ';'
      # Board variant(s), used to determine which components are output to the BoM
      variant: PIS
